# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: GCE SSH and Update from github old-school style

on:
  push:
    branches:
    - deploy/**

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  BASTION_IP: ${{ secrets.FIELDMAN_TEST_BASTION_IP }}
  GCE_INSTANCE: josel-staging        # TODO: update to instance name
  GCE_INSTANCE_ZONE: asia-east1-b    # TODO: update to instance zone

jobs:
  setup-ssh-update-deploy:
    name: Setup, SSH, Update, and Deploy
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/deploy/})"
      id: extract_branch

    # Update GCP firewall
    - name: Preview current branch
      run: |-
        echo "current branch:  ${{ steps.extract_branch.outputs.branch }}"

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '286.0.0'
        service_account_email: ${{ secrets.GCE_SA_EMAIL }}
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}

    # Start instance
    - name: Bringing up instance
      run: |-
        gcloud compute instances start --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE

    # Update GCP firewall
    - name: Allowing github ip to GCP firewall
      run: |-
        export TEMP_IP=$(dig +short myip.opendns.com @resolver1.opendns.com)
        export SOURCES=$(gcloud compute firewall-rules describe josel-staging-allow-github --format="table(sourceRanges.list())")
        echo $TEMP_IP
        echo $SOURCES
        gcloud compute firewall-rules update josel-staging-allow-github --source-ranges $BASTION_IP,$TEMP_IP
        gcloud compute firewall-rules update josel-staging-allow-github --no-disabled

    # SSH to machinge
    - name: Update machine from repository
      env:
        s_command: |-
          ls -al &&
          sudo su &&
          cd /opt/fieldman/osa/briar-osa &&
          ls -al &&
          sudo chmod 777 -R /opt/fieldman/osa/briar-osa/* &&
          sudo rm -rf .git/index.lock &&
          sudo git reset --hard HEAD &&
          echo ${{ steps.extract_branch.outputs.branch }} &&
          echo ${{ secrets.NAVAGISJOSEL_TOKEN }} &&
          sudo git fetch https://navagisjosel:${{ secrets.NAVAGISJOSEL_TOKEN }}@github.com/Navagis-LLC/briar-osa.git &&
          sudo git checkout ${{ steps.extract_branch.outputs.branch }} &&
          sudo git pull https://navagisjosel:${{ secrets.NAVAGISJOSEL_TOKEN }}@github.com/Navagis-LLC/briar-osa.git &&
          sudo git reset --hard origin/${{ steps.extract_branch.outputs.branch }} &&
          sudo git branch &&
          sudo git status
      run: |-
        gcloud compute ssh --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE -- $s_command
        pwd
        ls -al

    # SSH to machinge
    - name: Update bottle dependency requirements
      env:
        s_command: |-
          ls -al &&
          sudo su &&
          cd /opt/fieldman/osa/briar-osa &&
          ls -al &&
          sudo chmod 777 -R /opt/fieldman/osa/briar-osa/* &&
          source ./venv/bin/activate &&
          cat requirements.txt &&
          pip install --upgrade pip &&
          pip install -r requirements.txt &&
          ls -al
      run: |-
        gcloud compute ssh --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE -- $s_command
        pwd
        ls -al

    # SSH to machinge
    - name: Update flask dependency requirements
      env:
        s_command: |-
          ls -al &&
          sudo su &&
          cd /opt/fieldman/osa/briar-osa/flask &&
          ls -al &&
          sudo chmod 777 -R /opt/fieldman/osa/briar-osa/* &&
          source ./venv/bin/activate &&
          cat requirements.txt &&
          pip install --upgrade pip &&
          pip install -r requirements.txt &&
          ls -al
      run: |-
        gcloud compute ssh --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE -- $s_command
        pwd
        ls -al

    # SSH to machinge
    - name: Checking bottle to run
      env:
        s_command: |-
          ls -al &&
          sudo su &&
          cd /opt/fieldman/osa/briar-osa &&
          sed -i 's/daemon=False/daemon=True/g' app/app.py &&
          sudo ./venv/bin/python app/app.py &&
          curl --location --request POST 'http://127.0.0.1:8090/mob/test/recieve' \
          --header 'Content-Type: application/json' \
          --header 'Content-Type: text/plain' \
          --data-raw '{
             "test": "test"
          }' &&
          sed -i 's/daemon=True/daemon=False/g' app/app.py &&
          sudo -H -u root bash -c 'kill -9 `pgrep -u root python`' > /dev/null 2>&1 &&
          ls -al
      run: |-
        gcloud compute ssh --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE -- $s_command
        pwd
        ls -al

    # SSH to machinge
    - name: Checking flask to run
      env:
        s_command: |-
          ls -al &&
          sudo su &&
          sudo /opt/fieldman/osa/briar-osa/flask/venv/bin/gunicorn --workers 1 --bind 127.0.0.1:5000 -m 007 wsgi:app &&
          ls -al
      run: |-
        gcloud compute ssh --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE -- $s_command
        pwd
        ls -al

    - name: Sleep
      uses: jakejarvis/wait-action@master
      with:
        time: '60s'

    # Failure handler
    - name: The custom job cleanup always
      if: always()
      run: |-
        gcloud compute firewall-rules update josel-staging-allow-github --source-ranges $BASTION_IP
        gcloud compute firewall-rules update josel-staging-allow-github --disabled
        gcloud compute instances stop --project $PROJECT_ID --zone $GCE_INSTANCE_ZONE $GCE_INSTANCE
